define(["underscore","utils/pubsub","utils/interface/interface","app/task/script"],function(e,t,n,r){var i={showStim:function(e){var n=e.handle||e;t.publish("stim:start",[n])},hideStim:function(e){var n=e.handle||e;t.publish("stim:stop",[n])},setStimAttr:function(e){var n=e.handle,r=e.setter;t.publish("stim:setAttr",[n,r])},setTrialAttr:function(e,n){if(typeof e.setter=="undefined")throw new Error("The setTrialAttr action requires a setter property");t.publish("trial:setAttr",[e.setter,n])},setInput:function(e){if(typeof e.input=="undefined")throw new Error("The setInput action requires an input property");t.publish("trial:setInput",[e.input])},trigger:function(e){if(typeof e.handle=="undefined")throw new Error("The trigger action requires a handle property");t.publish("trial:setInput",[{handle:e.handle,on:"timeout",duration:+e.duration||0}])},removeInput:function(e){if(typeof e.handle=="undefined")throw new Error("The removeInput action requires a handle property");t.publish("trial:removeInput",[e.handle])},"goto":function(e){t.publish("trial:goto",[e])},endTrial:function(){t.publish("trial:end")},resetTimer:function(e,t){t.latency=0,n.resetTimer()},log:function(e,n){t.publish("log",[e,n])},setGlobalAttr:function(t){switch(typeof t.setter){case"function":t.setter.apply(null,[r.global,t]);break;case"object":e.extend(r.global,t.setter);break;default:throw new Error('setGlobalAttr requires a "setter" property')}},custom:function(e,t){if(typeof e.fn!="function")throw new Error("The custom action requires a fn propery");e.fn.apply(null,[e,t,r.global])}};return i});